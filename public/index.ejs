<style media="screen">
  .hide {
    display: none;
  }
</style>
<nav>
  <a class="black" tabindex="-1" href="/mark_gardner">mark</a>
  <a class="yellow" tabindex="-1" href="/martin_newell">martin</a>
  <a class="red" tabindex="-1" href="/esmerelda">esmerelda</a>
  <textarea class="blue" tabindex="1" placeholder="Wat?" v-model="new_post" v-on:focusout="addPost"></textarea>
</nav>
<nav class="hide">
  <a class="pink"></a>
  <a class="grey"></a>
  <a class="orange"></a>
  <a class="green"></a>
</nav>

<details id="posts" class="grey" style="display:none" itemscope itemtype="http://schema.org/blog">
  <summary>Posts</summary>
  <article  v-for="post in posts" itemscope itemtype="http://schema.org/SocialMediaPosting">
    <header><time itemprop="created_at" :datetime="post.created_at"></time></header>
    <blockquote itemprop="articleBody">{{post.articleBody}}</blockquote>
  </article>
</details>

<script id="app">
  var storage = {
    key: "some-posts",
    save() {
      var posts = document.querySelector('[itemtype="http://schema.org/blog"]').innerHTML
      localStorage.setItem(storage.key, posts)
    },
    load() {
      let posts_string =  localStorage.getItem(this.key)
      let posts = document.createRange().createContextualFragment(posts_string)
      posts.getItems = Item.get_items
      return posts.getItems('http://schema.org/SocialMediaPosting')
    }
  }

  var app = new Vue({
    el:   'details#posts',
    data: {
      posts: storage.load(),
      new_post: ''
    },
    methods: {
      addPost() {
        let value = this.new_post && this.new_post.trim()
        if (!value) { return }
        this.posts.push({
          articleBody: value,
          created_at: new Date().toISOString()
        })
        this.new_post = ''
        storage.save()
      }
    },

    watch: {
      posts() {
        Vue.nextTick( () => {
          storage.save()
        })
      }
    }
  })
</script>
