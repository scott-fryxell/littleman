
<script type="text/javascript" src="/scripts/timeago.js"></script>
<script type="text/javascript" src="/scripts/item.js"></script>

<section id="posts" itemscope itemtype="http://schema.org/blog">
  <header>
    <textarea tabindex="1" placeholder="Wat?" v-model="new_post" v-on:focusout="addPost"></textarea>
  </header>

  <article  v-for="post in posts" itemscope itemtype="http://schema.org/SocialMediaPosting">
    <header>
      <time itemprop="created_at" :datetime="post.created_at">Just now</time>
    </header>
    <p itemprop="articleBody">{{post.articleBody}}</p>

  </article>
 </section>

<template id="assertions">
  posts will be persisted to local storage
  posts will communicate when they are created_at
  the page wil load from cache first
</template>

<script id="app">
  var storage = {
    key: "some-posts",
    save: function(){
      var posts = document.querySelector('#posts').outerHTML
      localStorage.setItem(storage.key, posts)
    },
    load: function(){
      let posts_string =  localStorage.getItem(this.key)
      let posts = document.createRange().createContextualFragment(posts_string)
      posts.getItems = Item.get_items
      // console.log(posts.getItems('http://schema.org/SocialMediaPosting'))
      return posts.getItems('http://schema.org/SocialMediaPosting')
    }
  }
  var app = new Vue({
    el:   'section#posts',
    data: {
      posts: storage.load(),
      new_post: ''
    },
    methods: {
      addPost: function() {
        var value = this.new_post && this.new_post.trim()
        if (!value) {
          return
        }
        this.posts.push({
          id: 1,
          articleBody: value,
          created_at: Date()
        })
        this.new_post = ''
      }
    },
    watch: {
      posts: function() { storage.save() }
    }
  })
</script>
