<section id="app">
  <header>
    <h1>Kiva loans</h1>
    <h4>{{ values.length }} expiring in the next 24 hours</h4>
    <h5>${{ to_fund.toLocaleString() }} left to fund these loans</h5>
  </header>
  <aggregate
    v-bind:aggregate="aggregate">
  </aggregate>
  <ol>
    <loan
     v-for="loan in values"
     v-bind:loan="loan"
     v-bind:key="loan.id">
   </loan>
  </ol>
</section>

<script id="graph-query" type="text/javascript">
  let $query = `{
    loans(filters: { expiringSoon: true,
                           status: fundRaising
                   },
                   sortBy: expiringSoon,
                   limit: 100){
      totalCount
      values {
        id
        name
        use
        loanAmount
        loanFundraisingInfo {
          fundedAmount
          reservedAmount
          isExpiringSoon
        }
        plannedExpirationDate
        image {
          url(presetSize: default)
        }
        activity {
          name
        }
      }
    }
  }`
  let $url ="http://api.kivaws.org/graphql?query=" + encodeURI($query);
</script>
<script id="get-data" type="text/javascript">
  fetch($url).then( response => {
    return response.json()
  }).then( results => {
    app(results)
  }).catch( ex => {
    console.error('failed getting data from kiva', ex)
  })
</script>
<script id="components" type="text/javascript">
  Vue.component('aggregate', {
    props: ['aggregate'],
    template: '#aggregate'
  })
  Vue.component('loan', {
    props: ['loan'],
    template: '#loan'
  })

</script>
<script id="functions" type="text/javascript">
  function app(data){
    filter_data(data)
    set_aggregates(data)
    init_app(data)
  }
  function filter_data(results){
    let tomorrow = new Date( new Date().getTime() + (24 * 60 * 60 * 1000) )
    results.data.loans.values = results.data.loans.values.filter( (item) => {
      let expires = new Date(item.plannedExpirationDate)
      return expires < tomorrow
    });
  }
  function set_aggregates(results){
    to_fund = 0
    results.data.loans.values.forEach((loan) => {
      to_fund += loan.loanAmount - loan.loanFundraisingInfo.fundedAmount
    })
    results.data.loans.to_fund = to_fund
    return results
  }
  function init_app(results){
    filter_data(results)
    var app = new Vue({
      el: '#app',
      data: results.data.loans
    });
  }
</script>
<template id="aggregate">
  <header>
    <h1>Kiva loans</h1>
    <h4>{{ aggregate.values.length }} expiring in the next 24 hours</h4>
    <h5>${{ aggregate.to_fund.toLocaleString() }} left to fund these loans</h5>
  </header>
</template>
<template id="loan">
  <li>
    <figure>
      <img :src="loan.image.url">
      <figcaption >
        <h4><a :href="'https://www.kiva.org/lend/' + loan.id">{{loan.name}}</a></h4>
        <h6>${{ (loan.loanAmount - loan.loanFundraisingInfo.fundedAmount).toLocaleString() }} left to fundraise</h6>
        <p>{{loan.use}}</p>
      </figcaption>
    </figure>
  </li>
</template>
<style>
  ol {
    list-style-type: none;
  }
  li {
    margin-bottom:1.33rem
  }
  figure {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  figure > img {
    margin-right:1.33rem;
    border-radius:.33rem;
  }
  figcaption h4 {
    margin-bottom: 0;
  }
</style>
